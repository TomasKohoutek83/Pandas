Navod

1. lekce

        df.head()     = vypise prvnich 5 radku
        df.info()     = vypise zakladni info
        df.values     = vypise do listu radky framu
        df.columns    = vypise header sloupcu


        df.sort_values("nazev sloupce" , ascending = False)                               =  vypise jenom vybrany sloupec a seradi sestupne
        df.sort_values(["nazev sloupce", "nazev sloupce"])                                =  vyber vice sloupcu
        df.sort_values(["nazev sloupce", "nazev sloupce"], ascending = [TRUE, FALSE])     =  vyber vice sloupcu a jejich serazeni
        df.name["nazev sloupce"]                                                          =  vypise sloupec  (* zmena v hranatych zavorkach
        df.name[["nazev sloupce", "nazev sloupce"]]                                       =  vypise sloupce  (* zmena v hranatych zavorkach
        promena = ["nazev sloupce" , "nazev sloupce"]                                     =  vypise sloupce  (* v pripade promena je jedna zavorka
          df[promena]
        df["nazev sloupce"] > 50                                                          =  vypis s podminkou !! Vraci boolean !!
        df[df["nazev sloupce"] == "hodnota"]                                              =  vypis s podminkou
        df[df["nazev sloupce"] < "hodnota"]                                               =  vypis s podminkou
        --
          promena = df["nazev sloupce"] == "hodnota"
          promena = df["nazev sloupce"] == "hodnota"
          df[promena & promena]                                                           =  vypis dle podminek

          df[(df["sloupec"] == "hodnota") & (df["sloupec"] == "hodnota")]                 =  zapis v radku
        --
        promena= df["sloupec"].isin(["hodnota", "hodnota"])
        df[promena]                                                                       =  zapis s funkci isin 

     Columns
        df["nazev novy sloupec"] = df["sloupec"] / 100                                    = vytvori novy sloupec s hodnoutou
        df["nazev novy sloupec"] = df["sloupec"] / df["slopuec"] **2                      = dalsi priklad
     
     Summary statistic
         df["sloupec"].mean() / min()/ max()                                             = .mean() - je prumer z vybranych hodnot
         df["slupec"]. agg(pct30)                                                        = PCT jsou procenta
             df[["sloupec", "sloupec"]].agg(pct30)
         def pct40 (sloupec):
              return sloupec.quantile(0.4)
         df.["weight_kg"].cumsum()                                                        = vypise po radcich vcetne indexu
         
     Counting
        df.drop_duplicates(subset="sloupec")                                              = odstrani duplicity !!(Odstrani duplicity dle jmena ikdy maji jine dasli parametry rozdilne)
        promena= df.drop_duplicates(subset=["sloupec_1", "sloupec_2"])                    = odstrani duplicity dle hodnot dvou sloupcu
        df["sloupec"].value_counts()                                                 = vypise pocty hodnot dle zadaneho sloupce
        df["sloupec"].value_couts(sort=True)                                         = seradi od nejvyssich
        df["sloupec"].value_couts(normalize = True)                                  = seradi dle poctu a zobayi v pomeru procentualne
        
     Groupby summary statistic
        Priklad - slozity zapis
        df[df["sloupec1"] == "hodnota1"] ["sloupec2"].mean()
        df[df["sloupec1"] == "hodnota2"] ["sloupec2"].mean()
        df[df["sloupec1"] == "hodnota3"] ["sloupec2"].mean()
        Priklad - s pouzitim groupby
        df.groupby("sloupec1")["sloupec2].mean()                                          = group s prumerem na dva sloupce.Prvni Slpupec je napr: barva (zluta hneda atd a sruhz sloupec je pak prumer dalsi hodnoty
        df.groupby("sloupec1")["sloupec2].agg([min,max,sum])                              = prida k predchozimu prikladu jeste sloupec min,max,sum. AGG - pro vice funkci
        df.groupby(["sloupec1", "sloupec2"])["sloupec3"].mean()                           = group nad dvema sloupci s jednim vysldenym sloupce
        df.groupby(["sloupec1", "sloupec2"])[["sloupec3","sloupec4"]].mean()              = group nad dvema sloupci s dvema vysldenymi sloupci
        
     Pivot Tables
        df.pivot_table(values = "sloupec",index="hodnota")                                = seradi tabulku dle hodnoty pro sloupec (stejne jako groupby s mean!!!) to je defaultni!!!!
        df.pivot_table(values = "sloupec",index = "hodnota, aggfunc = [np.mean, np.median])  = seradi tabulku dle hodnoty ale s vice vysledky !! musi byt import numpy!!
        df.pivot_table(values = "sloupec1", index = "hodnota" , columns= "sloupec2")       = vytvori tabulku s radky sloupce1 a sluouci dle columns del hodnoty - zobrazi i NaN 
        df.pivot_table(values = "sloupec1", index = "hodnota" , columns= "sloupec2",fill_value = 0)  = nahradi hodnoty NaN v predchozi tabulce hodnotou 0 
        df.pivot_table(values = "sloupec1", index = "hodnota" , columns= "sloupec2",fill_value = 0, margins= True) = k predchozimu prikladu prida na konci sloupec s prumerem ke vsem radkum
        
    
     INdexing
        df.set_index("sloupec")                                                            = misto ciselneho indexu je vybrany sloupec - vse ostatni zustava stejne
        df.set_index(["sloupec1","sloupec2])                                               = seradi do indexu dve hodnoty - ukaze skupiny a pod skupiny      
        df.reset_index()                                                                   = vyresetuje index
        df.reset_index(drop=True)                                                          = odstrani index a  to zadany sloupec
     
     LOC and Iloc - koukonout na tema nemasmzsl vypisovat
        
        
        
     
     
